{"version":3,"sources":["app/components/dashboard/SimpleLineChart.js","app/components/dashboard/SimpleTable.js","app/components/dashboard/index.js"],"names":["data","name","Visits","Orders","SimpleLineChart","react_default","a","createElement","ResponsiveContainer_default","width","height","LineChart_default","XAxis_default","dataKey","YAxis_default","CartesianGrid_default","vertical","strokeDasharray","Tooltip_default","Legend_default","Line_default","type","stroke","activeDot","r","id","createData","calories","fat","carbs","protein","withStyles","root","overflowX","table","minWidth","props","classes","Paper_default","className","Table_default","TableHead_default","TableRow_default","TableCell_default","align","TableBody_default","map","n","key","component","scope","Dashboard","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","Typography_default","variant","gutterBottom","chartContainer","dashboard_SimpleLineChart","tableContainer","dashboard_SimpleTable","PureComponent","withRouter","marginLeft"],"mappings":"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","file":"static/js/10.af500caf.chunk.js","sourcesContent":["import React from 'react';\nimport ResponsiveContainer from 'recharts/lib/component/ResponsiveContainer';\nimport LineChart from 'recharts/lib/chart/LineChart';\nimport Line from 'recharts/lib/cartesian/Line';\nimport XAxis from 'recharts/lib/cartesian/XAxis';\nimport YAxis from 'recharts/lib/cartesian/YAxis';\nimport CartesianGrid from 'recharts/lib/cartesian/CartesianGrid';\nimport Tooltip from 'recharts/lib/component/Tooltip';\nimport Legend from 'recharts/lib/component/Legend';\n\nconst data = [\n    { name: 'Mon', Visits: 2200, Orders: 3400 },\n    { name: 'Tue', Visits: 1280, Orders: 2398 },\n    { name: 'Wed', Visits: 5000, Orders: 4300 },\n    { name: 'Thu', Visits: 4780, Orders: 2908 },\n    { name: 'Fri', Visits: 5890, Orders: 4800 },\n    { name: 'Sat', Visits: 4390, Orders: 3800 },\n    { name: 'Sun', Visits: 4490, Orders: 4300 },\n];\n\nfunction SimpleLineChart() {\n    return (\n        // 99% per https://github.com/recharts/recharts/issues/172\n        <ResponsiveContainer width=\"99%\" height={320}>\n            <LineChart data={data}>\n                <XAxis dataKey=\"name\" />\n                <YAxis />\n                <CartesianGrid vertical={false} strokeDasharray=\"3 3\" />\n                <Tooltip />\n                <Legend />\n                <Line type=\"monotone\" dataKey=\"Visits\" stroke=\"#82ca9d\" />\n                <Line type=\"monotone\" dataKey=\"Orders\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\n            </LineChart>\n        </ResponsiveContainer>\n    );\n}\n\nexport default SimpleLineChart;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst styles = {\n    root: {\n        width: '100%',\n        overflowX: 'auto',\n    },\n    table: {\n        minWidth: 700,\n    },\n};\n\nlet id = 0;\nconst createData = (name, calories, fat, carbs, protein) => {\n    id += 1;\n    return { id, name, calories, fat, carbs, protein };\n};\n\nconst data = [\n    createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n    createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n    createData('Eclair', 262, 16.0, 24, 6.0),\n    createData('Cupcake', 305, 3.7, 67, 4.3),\n    createData('Gingerbread', 356, 16.0, 49, 3.9),\n];\n\nconst SimpleTable = props => {\n    const { classes } = props;\n\n    return (\n        <Paper className={classes.root}>\n            <Table className={classes.table}>\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Dessert (100g serving)</TableCell>\n                        <TableCell align=\"right\">Calories</TableCell>\n                        <TableCell align=\"right\">Fat (g)</TableCell>\n                        <TableCell align=\"right\">Carbs (g)</TableCell>\n                        <TableCell align=\"right\">Protein (g)</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {data.map(n => (\n                        <TableRow key={n.id}>\n                            <TableCell component=\"th\" scope=\"row\">\n                                {n.name}\n                            </TableCell>\n                            <TableCell align=\"right\">{n.calories}</TableCell>\n                            <TableCell align=\"right\">{n.fat}</TableCell>\n                            <TableCell align=\"right\">{n.carbs}</TableCell>\n                            <TableCell align=\"right\">{n.protein}</TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </Paper>\n    );\n};\n\nSimpleTable.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(SimpleTable);\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport SimpleLineChart from './SimpleLineChart';\nimport SimpleTable from './SimpleTable';\n\nconst styles = () => ({\n    chartContainer: {\n        marginLeft: -22,\n    },\n    tableContainer: {\n        height: 320,\n    },\n});\n\nclass Dashboard extends PureComponent {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <section id=\"dashboard\">\n                <Typography variant=\"h4\" gutterBottom component=\"h2\">\n                    Orders\n                </Typography>\n                <Typography component=\"div\" className={classes.chartContainer}>\n                    <SimpleLineChart />\n                </Typography>\n                <Typography variant=\"h4\" gutterBottom component=\"h2\">\n                    Products\n                </Typography>\n                <div className={classes.tableContainer}>\n                    <SimpleTable />\n                </div>\n            </section>\n        );\n    }\n}\n\nDashboard.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withRouter(withStyles(styles)(Dashboard));\n"],"sourceRoot":""}